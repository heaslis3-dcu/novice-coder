{
  "id": 2,
  "title": "Python Basics: Your First Program",
  "excerpt": "Learn Python fundamentals with hands-on examples. Perfect for complete beginners with no prior experience.",
  "content": "<h1>Python Basics: Your First Program</h1>\n\n<p>Now that you've set up Python, let's dive into the fundamentals and build your programming knowledge step by step!</p>\n\n<h2>Variables and Data Types</h2>\n\n<p>Variables are like containers that store information. In Python, you don't need to declare variable types - Python figures it out automatically.</p>\n\n<pre><code class=\"language-python\"># String (text)\nname = \"Alice\"\nmessage = 'Hello, World!'\n\n# Integer (whole numbers)\nage = 25\nscore = 100\n\n# Float (decimal numbers)\nprice = 19.99\ntemperature = 98.6\n\n# Boolean (True/False)\nis_student = True\nis_raining = False</code></pre>\n\n<h3>Naming Conventions</h3>\n\n<ul>\n  <li>Use descriptive names: <code>user_age</code> instead of <code>ua</code></li>\n  <li>Use lowercase with underscores: <code>first_name</code></li>\n  <li>Start with a letter or underscore, not a number</li>\n  <li>Avoid Python keywords like <code>print</code>, <code>if</code>, <code>for</code></li>\n</ul>\n\n<h2>Basic Operations</h2>\n\n<p>Python supports all the basic mathematical operations:</p>\n\n<pre><code class=\"language-python\"># Arithmetic operations\nx = 10\ny = 3\n\nprint(x + y)   # Addition: 13\nprint(x - y)   # Subtraction: 7\nprint(x * y)   # Multiplication: 30\nprint(x / y)   # Division: 3.333...\nprint(x ** y)  # Exponentiation: 1000\nprint(x // y)  # Floor division: 3\nprint(x % y)   # Modulus (remainder): 1</code></pre>\n\n<h2>User Input</h2>\n\n<p>Get input from users with the <code>input()</code> function:</p>\n\n<pre><code class=\"language-python\">name = input(\"What's your name? \")\nprint(f\"Hello, {name}!\")\n\nage = input(\"How old are you? \")\n# Convert string to integer\nage = int(age)\nprint(f\"You are {age} years old.\")</code></pre>\n\n<p><strong>Note:</strong> <code>input()</code> always returns a string, so you need to convert it to a number if you want to do math with it.</p>\n\n<h2>Conditional Statements</h2>\n\n<p>Make decisions in your code with <code>if</code>, <code>elif</code>, and <code>else</code>:</p>\n\n<pre><code class=\"language-python\">temperature = 75\n\nif temperature > 80:\n    print(\"It's hot outside!\")\nelif temperature > 60:\n    print(\"It's pleasant outside!\")\nelse:\n    print(\"It's cold outside!\")\n\n# You can also check multiple conditions\nage = 20\nhas_license = True\n\nif age >= 18 and has_license:\n    print(\"You can drive!\")\nelse:\n    print(\"You cannot drive.\")</code></pre>\n\n<h2>Your First Mini-Project: Simple Calculator</h2>\n\n<p>Let's build a simple calculator that can add, subtract, multiply, and divide:</p>\n\n<pre><code class=\"language-python\">print(\"Simple Calculator\")\nprint(\"1. Add\")\nprint(\"2. Subtract\")\nprint(\"3. Multiply\")\nprint(\"4. Divide\")\n\nchoice = input(\"Enter choice (1/2/3/4): \")\nnum1 = float(input(\"Enter first number: \"))\nnum2 = float(input(\"Enter second number: \"))\n\nif choice == '1':\n    result = num1 + num2\n    print(f\"Result: {result}\")\nelif choice == '2':\n    result = num1 - num2\n    print(f\"Result: {result}\")\nelif choice == '3':\n    result = num1 * num2\n    print(f\"Result: {result}\")\nelif choice == '4':\n    if num2 != 0:\n        result = num1 / num2\n        print(f\"Result: {result}\")\n    else:\n        print(\"Error: Cannot divide by zero!\")\nelse:\n    print(\"Invalid input!\")</code></pre>\n\n<h2>Working with Strings</h2>\n\n<p>Strings are incredibly versatile in Python:</p>\n\n<pre><code class=\"language-python\">name = \"Python Programmer\"\n\n# String methods\nprint(name.upper())        # PYTHON PROGRAMMER\nprint(name.lower())        # python programmer\nprint(name.title())        # Python Programmer\nprint(len(name))           # 17 (length of string)\n\n# String concatenation\nfirst_name = \"John\"\nlast_name = \"Doe\"\nfull_name = first_name + \" \" + last_name\nprint(full_name)           # John Doe\n\n# f-strings (formatted strings)\nage = 25\nprint(f\"{first_name} is {age} years old\")  # John is 25 years old</code></pre>\n\n<h2>Common Mistakes to Avoid</h2>\n\n<ol>\n  <li><strong>Forgetting colons</strong> after if/else statements</li>\n  <li><strong>Inconsistent indentation</strong> - Python cares about spaces!</li>\n  <li><strong>Using = instead of ==</strong> for comparisons</li>\n  <li><strong>Not converting input</strong> from strings to numbers</li>\n  <li><strong>Misspelling variable names</strong> - Python is case-sensitive</li>\n</ol>\n\n<h2>Practice Exercises</h2>\n\n<p>Try these exercises to reinforce what you've learned:</p>\n\n<h3>Exercise 1: Number Comparison</h3>\n\n<p>Create a program that asks for two numbers and shows which is larger.</p>\n\n<h3>Exercise 2: Temperature Converter</h3>\n\n<p>Write a program that converts Celsius to Fahrenheit using the formula: <code>F = (C √ó 9/5) + 32</code></p>\n\n<h3>Exercise 3: Simple Mad Libs</h3>\n\n<p>Create a program that asks for different words (noun, verb, adjective) and inserts them into a story.</p>\n\n<h2>Debugging Tips</h2>\n\n<ul>\n  <li>Use <code>print()</code> statements to see what's happening</li>\n  <li>Read error messages carefully - they tell you exactly what's wrong</li>\n  <li>Check your indentation and spelling</li>\n  <li>Test small parts of your code individually</li>\n</ul>\n\n<h2>Next Steps</h2>\n\n<p>Now that you understand the basics, here's what to learn next:</p>\n\n<ul>\n  <li><strong>Loops</strong> - <code>for</code> and <code>while</code> loops for repetition</li>\n  <li><strong>Lists</strong> - Collections of items</li>\n  <li><strong>Dictionaries</strong> - Key-value pairs</li>\n  <li><strong>Functions</strong> - Reusable blocks of code</li>\n</ul>\n\n<h2>Remember</h2>\n\n<p><strong>Practice makes perfect!</strong> Code every day, even if it's just for 15 minutes. The more you practice, the more natural programming will feel.</p>\n\n<p>Don't worry if you don't understand everything immediately. Programming concepts take time to sink in. Keep experimenting, making mistakes, and learning from them.</p>\n\n<p>Ready for the next challenge? Check out our <a href=\"#\" data-post-id=\"3\">HTML & CSS tutorial</a> to start building websites!</p>\n\n<p>Happy coding! üêç‚ú®</p>",
  "category": "Python Basics",
  "skillLevel": "beginner",
  "date": "2023-11-10",
  "readTime": "12 min read",
  "slug": "python-basics-first-program",
  "published": true,
  "tags": ["python", "basics", "tutorial", "beginner", "programming"],
  "icon": "üêç"
}
